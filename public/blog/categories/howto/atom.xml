<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: howto | Code Infinity]]></title>
  <link href="http://www.orcame.com/blog/categories/howto/atom.xml" rel="self"/>
  <link href="http://www.orcame.com/"/>
  <updated>2013-12-26T16:13:09+08:00</updated>
  <id>http://www.orcame.com/</id>
  <author>
    <name><![CDATA[orcame]]></name>
    <email><![CDATA[orcame@outlook.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何在多台电脑上使用Octopress写博客]]></title>
    <link href="http://www.orcame.com/blog/2013/12/26/octopress-multi-compoter/"/>
    <updated>2013-12-26T13:56:00+08:00</updated>
    <id>http://www.orcame.com/blog/2013/12/26/octopress-multi-compoter</id>
    <content type="html"><![CDATA[<p>英文好的，请直接猛击<a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">这里</a>。英文不好的，就听我啰嗦几句。</p>

<p>先来讲讲基础知识，我们需要有两个branch，一个叫<code>master</code>，这个是默认的，不能改，被存储在blog根目录的<code>_deploy</code>文件夹下，是用来存放生成好的blog站点文件的。另一个叫<code>source</code>(名字可以自己定义，此文中指定为<em>source</em>),是用来存放markdown源文件，theme，plugin等用于生成blog所需要的所有文件的。</p>

<!--more-->


<p>如果你是按照<a href="http://www.orcame.com/blog/2013/03/02/hello-git-world/">这个</a>方式创建的博客，那么你远端是没有<code>source</code>分支的(如果远端已经创建<code>source分</code>支,请略过)。首先需要创建一个<code>source</code>分支，在本地blog根目录下执行</p>

<pre><code>git branch source   //创建本地source分支
git checkout source //切换本地分支到source
git add --all           //将所有文件add到source分支
git commit -m "init"    //commit
git push origin source  //将source分支push到服务器
</code></pre>

<p>这样便将本地所有源文件(除了<code>_deploy</code>文件夹下的内容)push到远端的<code>source</code>分支了</p>

<p>换一台电脑，将远端<code>source</code>分支clone到本地</p>

<pre><code>git clone -b source git@github.com:xxxxx
</code></pre>

<p>可以发现，在blog根目录中<code>_deploy</code>文件夹(可能没有)是空的(如果不是空的，请清空)，下一步是将远端<code>master</code>分支clone到本地的_deploy文件夹</p>

<pre><code>git clone -b master git@github.com:xxxxx _deploy
</code></pre>

<p>然后需要做一些安装配置的步骤</p>

<pre><code>gem install bundler
bundle install
</code></pre>

<p>接下来<code>rake generate</code>就可以生成blog文件了。</p>

<p>需要注意的是，做完任何更改后（例如新增了一篇文章），需要提交到<code>source</code>分支</p>

<pre><code>git add .
git commit -am "Some comment here." 
git push origin source  # update the remote source branch 
</code></pre>

<p>然后<code>rake deploy</code>来发布blog。</p>

<p>当切换到另外一台电脑时候，同样需要把远端<code>source</code>和<code>master</code>分支的新内容pull到本地</p>

<pre><code>cd octopress
git pull origin source  # update the local source branch
cd ./_deploy
git pull origin master  # update the local master branch
</code></pre>

<p>总结起来就是:<br/>
1. 从远端<code>source</code>和<code>master</code>同步数据<br/>
2. 写文章（或其他改动，例如更改theme）<br/>
3. push到远端<code>source</code>分支<br/>
4. <code>rake deploy</code>（相当于push到远端<code>master</code>分支）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to edit boot menu by bcedit]]></title>
    <link href="http://www.orcame.com/blog/2013/10/07/how-to-edit-boot-menu-by-bcedit/"/>
    <updated>2013-10-07T19:51:00+08:00</updated>
    <id>http://www.orcame.com/blog/2013/10/07/how-to-edit-boot-menu-by-bcedit</id>
    <content type="html"><![CDATA[<p>Copy your vm file(*.vhd for example) to a folder, D:\boot eg.</p>

<p>Open cmd as administrator</p>

<p>```bat command line script
rem {current} is a identifier id. can also specifier the identifier id. This is used to backup the {current} setting, ignore it if you dont want.
rem <strong>strongly recommend</strong>
bcdedit /copy {current} /d "current_backup"</p>

<p>rem set the device(the vhd file)
bcdedit /set {current} device vhd=[d:]\vhd path to file
rem bcdedit /set {current} device vhd=[d:]\boot\xxxx.vhd for example.</p>

<p>rem set the osdevice(same path of the device)
bcdedit /set {current} osdevice vhd=[d:]\vhd path to file</p>

<p>rem set the default boot item(ignore this if you dont want make the new system as the default one)
bcdedit /set {bootmgr} default {current} //guid.</p>

<p>```
reboot os and enjoy the new system.</p>
]]></content>
  </entry>
  
</feed>
