<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Code Infinity]]></title>
  <link href="http://www.orcame.com/atom.xml" rel="self"/>
  <link href="http://www.orcame.com/"/>
  <updated>2013-10-07T20:12:40+08:00</updated>
  <id>http://www.orcame.com/</id>
  <author>
    <name><![CDATA[orcame]]></name>
    <email><![CDATA[orcame@outlook.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[how to edit boot menu by bcedit]]></title>
    <link href="http://www.orcame.com/blog/2013/10/07/how-to-edit-boot-menu-by-bcedit/"/>
    <updated>2013-10-07T19:51:00+08:00</updated>
    <id>http://www.orcame.com/blog/2013/10/07/how-to-edit-boot-menu-by-bcedit</id>
    <content type="html"><![CDATA[<p>Copy your vm file(*.vhd for example) to a folder, D:\boot eg.</p>

<p>Open cmd as administrator</p>

<figure class='code'><figcaption><span>command line script</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="c">rem {current} is a identifier id. can also specifier the identifier id. This is used to backup the {current} setting, ignore it if you dont want. </span>
</span><span class='line'><span class="c">rem **strongly recommend**</span>
</span><span class='line'>bcdedit <span class="n">/copy</span> {current} <span class="n">/d</span> <span class="s2">&quot;current_backup&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">rem set the device(the vhd file)</span>
</span><span class='line'>bcdedit <span class="n">/set</span> {current} device vhd<span class="o">=</span>[d:]\vhd path to file
</span><span class='line'><span class="c">rem bcdedit /set {current} device vhd=[d:]\boot\xxxx.vhd for example.</span>
</span><span class='line'>
</span><span class='line'><span class="c">rem set the osdevice(same path of the device)</span>
</span><span class='line'>bcdedit <span class="n">/set</span> {current} osdevice vhd<span class="o">=</span>[d:]\vhd path to file
</span><span class='line'>
</span><span class='line'><span class="c">rem set the default boot item(ignore this if you dont want make the new system as the default one)</span>
</span><span class='line'>bcdedit <span class="n">/set</span> {bootmgr} default {current} <span class="n">//guid.</span>
</span></code></pre></td></tr></table></div></figure>


<p>reboot os and enjoy the new system.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简单的Go语言]]></title>
    <link href="http://www.orcame.com/blog/2013/08/11/jian-dan-de-goyu-yan/"/>
    <updated>2013-08-11T19:35:00+08:00</updated>
    <id>http://www.orcame.com/blog/2013/08/11/jian-dan-de-goyu-yan</id>
    <content type="html"><![CDATA[<p>最近小小的看了下Golang，这里记录一下相当初级的语法规则。</p>

<h2>Hello Go</h2>

<figure class='code'><figcaption><span>hello go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'><span class="kn">import</span> <span class="nx">fmt</span> <span class="s">&quot;fmt&quot;</span>  <span class="c1">// 导入fmt库，用于IO操作，这里import 相当于C中的#include</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Hello, golang&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>import 还可以写成下面的样式</p>

<figure class='code'><figcaption><span>import 补充</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">import</span><span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;math&quot;</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h2>变量</h2>

<p>golang是<strong>静态语言</strong>，变量声明需要类型。
具体请看下面代码示例：</p>

<figure class='code'><figcaption><span>关于变量</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 变量声明</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">str</span> <span class="kt">string</span><span class="p">=</span><span class="s">&quot;hello golang&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 在一个语句中声明多个变量</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">z</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 可以根据变量值反推变量类型</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">value</span><span class="p">=</span><span class="mi">100</span><span class="c1">//这里的value是int类型</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 如果在**函数体内部**</span>
</span><span class='line'><span class="c1">// 可以这样声明变量</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">demo</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">inner</span><span class="o">:=</span><span class="kc">true</span> <span class="c1">//这里相当于 var inner int=100</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>常量</h2>

<p>常量部分官方的说法是：</p>

<blockquote><ul>
<li>Constants are declared like variables, but with the const keyword.</li>
<li>Constants can be character, string, boolean, or numeric values.</li>
<li>Constants cannot be declared using the := syntax.</li>
</ul>
</blockquote>

<p>意思就是：</p>

<blockquote><ul>
<li>常量的声明和变量类似，用<strong>const</strong>关键字</li>
<li>常量只能是内置类型，例如:char,string,boolean,int,floag&#8230;</li>
<li>常量不能用 := 的方式声明</li>
</ul>
</blockquote>

<figure class='code'><figcaption><span>声明一个常量</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">const</span> <span class="nx">con</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&quot;这个是常量&quot;</span>
</span><span class='line'><span class="c1">//对比</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">val</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&quot;这是一个变量&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="nx">err</span> <span class="o">:=</span> <span class="s">&quot;这是错误的常量声明方式.&quot;</span>
</span><span class='line'><span class="c1">//对比</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">right</span> <span class="o">:=</span> <span class="s">&quot;这是正确的变量声明方式.&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>golang 的内置类型包括以下几种</p>

<blockquote><ul>
<li>bool</li>
<li>string</li>
<li>int, int8, int16, int32, int64</li>
<li>uint, uint8, uint16, uint32, uint64, uintptr</li>
<li>byte // alias for uint8</li>
<li>rune // alias for int32</li>
<li>float32, float64</li>
<li>complex64, complex128</li>
</ul>
</blockquote>

<h2>数组与切片</h2>

<h3>数组</h3>

<figure class='code'><figcaption><span>数组的定义</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">arr</span> <span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="kt">int</span> <span class="c1">//这样定义的数组初始值为[0,0,0,0,0,0,0,0,0,0]</span>
</span><span class='line'>
</span><span class='line'><span class="nx">arr</span><span class="o">:=</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="kt">int</span><span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">}</span> <span class="c1">//这样的语句只能出现在function内部</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">arr2</span> <span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="kt">int</span> <span class="c1">//这是一个二维数组</span>
</span><span class='line'>
</span><span class='line'><span class="nb">len</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="c1">//用内置len方法获取数组长度</span>
</span></code></pre></td></tr></table></div></figure>


<h3>切片</h3>

<figure class='code'><figcaption><span>切片操作</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">arr</span> <span class="o">:=</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="kt">int</span><span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">}</span>
</span><span class='line'><span class="nx">slice</span> <span class="o">:=</span><span class="nx">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span> <span class="c1">//arr下标1～3的内容，不包括a[4]</span>
</span><span class='line'>
</span><span class='line'><span class="nx">slice</span> <span class="p">=</span><span class="nx">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span> <span class="c1">//arr[1] 到arr[4]，即1到结尾，包括结尾</span>
</span><span class='line'>
</span><span class='line'><span class="nx">slice</span> <span class="p">=</span><span class="nx">arr</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span> <span class="c1">//arr[0] 到arr[3], 不包括arr[4]</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意：</strong>数组的赋值是copy式的，见如下代码：</p>

<figure class='code'><figcaption><span>数组和切片的操作</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">arr1</span> <span class="o">:=</span> <span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="kt">int</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">}</span><span class="c1">//这样的声明是一个数组(长度是数组类型的一部分)</span>
</span><span class='line'>  <span class="nx">slice1</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">}</span><span class="c1">//这样的声明是一个切片</span>
</span><span class='line'>  <span class="nx">arr2</span> <span class="o">:=</span><span class="nx">arr1</span> <span class="c1">//arr2是arr1的一个副本</span>
</span><span class='line'>  <span class="nx">slice2</span> <span class="o">:=</span><span class="nx">slice1</span> <span class="c1">//slice2是slice1的一个引用</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;arr1:&quot;</span><span class="p">,</span><span class="nx">arr1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;arr2:&quot;</span><span class="p">,</span><span class="nx">arr2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;slice1:&quot;</span><span class="p">,</span><span class="nx">slice1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;slice2:&quot;</span><span class="p">,</span><span class="nx">slice2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">arr2</span><span class="p">[</span><span class="mi">3</span><span class="p">]=</span><span class="mi">100</span>
</span><span class='line'>  <span class="nx">slice2</span><span class="p">[</span><span class="mi">3</span><span class="p">]=</span><span class="mi">300</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;---after change arr2[3]=100 &amp; slice2[3]=300---&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;arr1:&quot;</span><span class="p">,</span><span class="nx">arr1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;arr2:&quot;</span><span class="p">,</span><span class="nx">arr2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;slice1:&quot;</span><span class="p">,</span><span class="nx">slice1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;slice2:&quot;</span><span class="p">,</span><span class="nx">slice2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">slice4arr</span><span class="o">:=</span><span class="nx">arr1</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span> <span class="c1">//slice4arr是对arr1[1,2,3]的一个引用</span>
</span><span class='line'>  <span class="nx">slice4arr</span><span class="p">[</span><span class="mi">2</span><span class="p">]=</span><span class="mi">400</span> <span class="c1">//slice4arr[2]指向的是arr1[3]</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;---after change slice4arr[2]=400---&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;arr1:&quot;</span><span class="p">,</span><span class="nx">arr1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;arr2:&quot;</span><span class="p">,</span><span class="nx">arr2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;slice1:&quot;</span><span class="p">,</span><span class="nx">slice1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;slice2:&quot;</span><span class="p">,</span><span class="nx">slice2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>程序的输出是：</p>

<figure class='code'><figcaption><span>数组和切片操作结果</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">arr1</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">arr2</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">slice1</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">slice2</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="o">---</span><span class="nx">after</span> <span class="nx">change</span> <span class="nx">arr2</span><span class="p">[</span><span class="mi">3</span><span class="p">]=</span><span class="mi">100</span> <span class="o">&amp;</span> <span class="nx">slice2</span><span class="p">[</span><span class="mi">3</span><span class="p">]=</span><span class="mi">300</span><span class="o">---</span>
</span><span class='line'><span class="nx">arr1</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">arr2</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">100</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">slice1</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">300</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">slice2</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">300</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="o">---</span><span class="nx">after</span> <span class="nx">change</span> <span class="nx">slice4arr</span><span class="p">[</span><span class="mi">2</span><span class="p">]=</span><span class="mi">400</span><span class="o">---</span>
</span><span class='line'><span class="nx">arr1</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">400</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">arr2</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">100</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">slice1</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">300</span> <span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="nx">slice2</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">300</span> <span class="mi">5</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>if语句</h2>

<p>golang中if语句是没有小括号()的，但必须包括花括号{},并且<strong>{符号不能放置在下一行</strong>（这个约定其实和golang中的分号;有关)</p>

<figure class='code'><figcaption><span>if 语句</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">//这是正确的写法</span>
</span><span class='line'><span class="k">if</span> <span class="kc">true</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//do something...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//这是错误的写法</span>
</span><span class='line'><span class="k">if</span> <span class="kc">true</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//do something...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//if -else if -else 语句</span>
</span><span class='line'><span class="k">if</span> <span class="nx">a</span><span class="p">&gt;</span><span class="mi">0</span><span class="p">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span><span class="k">else</span> <span class="k">if</span> <span class="nx">a</span><span class="o">==</span><span class="mi">0</span><span class="p">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>switch 语句</h2>

<p>switch 同if一样没有小括号，但必须有花括号。case不需要break，可以用逗号分割多个值.<strong>{符号不能放置在下一行</strong></p>

<figure class='code'><figcaption><span>switch 语句</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">switch</span> <span class="nx">value</span><span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;eq one&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;lt five&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">default</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="err">&quot;</span><span class="nx">lt</span> <span class="nx">one</span> <span class="nx">or</span> <span class="nx">gt</span> <span class="nx">four</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>for 循环</h2>

<p>golang中for循环有三种形式, 同if一样没有小括号，但必须有花括号。<strong>{符号不能放置在下一行</strong></p>

<figure class='code'><figcaption><span>for loop</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">//init;condition;post 形式</span>
</span><span class='line'><span class="k">for</span> <span class="nx">idx</span><span class="o">:=</span><span class="mi">0</span><span class="p">;</span><span class="nx">idx</span><span class="p">&lt;</span><span class="nb">len</span><span class="p">(</span><span class="nx">arr</span><span class="p">);</span><span class="nx">idx</span><span class="o">++</span><span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">idx</span><span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//only condition 形式</span>
</span><span class='line'>
</span><span class='line'><span class="nx">idx</span><span class="o">:=</span><span class="mi">0</span>
</span><span class='line'><span class="k">for</span> <span class="nx">idx</span><span class="p">&lt;</span><span class="nb">len</span><span class="p">(</span><span class="nx">arr</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">idx</span><span class="p">])</span>
</span><span class='line'>  <span class="nx">idx</span><span class="o">++</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//forever</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span><span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Never die&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong><em>golang 中没有 while语句，for语句已经包含了while的功能</em></strong></p>

<h2>函数</h2>

<p>golang中函数的声明和C略有不同，返回值类型放在了后面</p>

<figure class='code'><figcaption><span>golang中的函数声明</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">func</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">a</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">b</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">b</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//也可以写成下面这样：</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">b</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//函数可以有不定个数的参数</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">values</span> <span class="o">...</span><span class="kt">int</span><span class="p">){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">total</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span><span class="nx">v</span> <span class="o">:=</span><span class="k">range</span> <span class="nx">values</span><span class="p">{</span>
</span><span class='line'>              <span class="c1">//这里用了一个变量 _，golang中如果一个变量声明了但没有使用是不允许的，所以有了这个特殊的_</span>
</span><span class='line'>              <span class="c1">//对于_，golang在编译的时候不会做0使用的验证。如果需要访问下标，可以写作for idx,value :=range values....</span>
</span><span class='line'>      <span class="nx">total</span><span class="o">+=</span><span class="nx">v</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">total</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//函数还可以闭包，熟悉js的人对这个不会陌生</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">next</span><span class="p">()</span> <span class="kd">func</span><span class="p">()</span> <span class="kt">int</span><span class="p">{</span>
</span><span class='line'>  <span class="nx">i</span><span class="o">:=</span><span class="mi">0</span>
</span><span class='line'>  <span class="k">return</span> <span class="kd">func</span><span class="p">()</span><span class="kt">int</span><span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">i</span><span class="o">++</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//调用：</span>
</span><span class='line'><span class="nx">nextInt</span> <span class="o">:=</span><span class="nx">next</span><span class="p">()</span>
</span><span class='line'><span class="k">for</span><span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">nextInt</span><span class="p">())</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>结构体</h2>

<p>还是看代码吧</p>

<figure class='code'><figcaption><span>结构体</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Panda</span> <span class="kd">struct</span><span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">weight</span> <span class="kt">int</span>
</span><span class='line'>  <span class="nx">description</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//结构体的初始化有一下几种方式</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">paul</span> <span class="nx">Panda</span><span class="p">=</span><span class="nx">Panda</span><span class="p">{</span><span class="s">&quot;Paul&quot;</span><span class="p">,</span><span class="mi">1000</span><span class="p">,</span><span class="s">&quot;神龙大侠&quot;</span><span class="p">}</span>
</span><span class='line'><span class="c1">//或者</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">paul</span> <span class="nx">Panda</span><span class="p">=</span><span class="nx">Panda</span><span class="p">{</span><span class="nx">name</span><span class="p">:</span><span class="s">&quot;Paul&quot;</span><span class="p">,</span><span class="nx">description</span><span class="p">:</span><span class="s">&quot;神龙大侠&quot;</span><span class="p">,</span><span class="nx">weight</span><span class="p">:</span><span class="mi">1000</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>结构体的方法是比较特殊的，同C#等不同，不能在结构体内部声明，需要如此这般</p>

<figure class='code'><figcaption><span>结构体方法</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="o">*</span><span class="nx">Panda</span><span class="p">)</span> <span class="nx">Box</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;打出一记肥猫拳&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="o">*</span><span class="nx">Panda</span><span class="p">)</span> <span class="nx">Kick</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;佛山无影脚，阿达～～～～&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意:</strong> golang中没有访问限制关键之，public，private，protected等，约定首字母大写的方法即为public(可以被别的包访问)</p>

<h2>接口</h2>

<p>接口是这样定义的</p>

<figure class='code'><figcaption><span>interface定义</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">swordsman</span> <span class="kd">interface</span><span class="p">{</span> <span class="c1">//大侠会打拳和踢人</span>
</span><span class='line'>  <span class="nx">Box</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">Kick</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意</strong> golang中的接口是不需要显示继承的，golang认为有A的功能就是一个A，这里就是<strong>会打拳和踢人的就是大侠</strong>，那么Panda已经实现了swordsman接口，paul是一个大侠了</p>

<figure class='code'><figcaption><span>看看作为大侠的paul</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">paul</span> <span class="nx">Panda</span><span class="p">=</span><span class="nx">Panda</span><span class="p">{</span><span class="s">&quot;Paul&quot;</span><span class="p">,</span><span class="mi">1000</span><span class="p">,</span><span class="s">&quot;神龙大侠&quot;</span><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">sw</span> <span class="nx">swardsman</span><span class="p">=</span><span class="o">&amp;</span><span class="nx">paul</span>
</span><span class='line'><span class="nx">sw</span><span class="p">.</span><span class="nx">Box</span><span class="p">()</span>
</span><span class='line'><span class="nx">sw</span><span class="p">.</span><span class="nx">Kick</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>关于分号;</h2>

<p>golang 的唯一需要分号的地方是作为for循环中的init;condition;post分割符;在编译代码过程中，词法分析器会自动的为代码添加上分号，所以写代码的时候不需要写分号。词法分析器添加分号的规则是：</p>

<blockquote><p>行尾最后一个token（这当然不包括注释）是一个标识符，数值、字符串等字面值，或者++,&#8211;,break, fallthrough,continue, return中的一个</p></blockquote>

<p>按照以上规则，<strong>千万不要尝试在将for，switch，if等代码体的{写到下一行，因为这样会导致在{之前加入一个分号(;),引起错误。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[愿生者平安，逝者安息]]></title>
    <link href="http://www.orcame.com/blog/2013/04/21/for-yaan/"/>
    <updated>2013-04-21T22:02:00+08:00</updated>
    <id>http://www.orcame.com/blog/2013/04/21/for-yaan</id>
    <content type="html"><![CDATA[<p> <img src="http://www.orcame.com/images/image-post/yaan.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[测试代码高亮]]></title>
    <link href="http://www.orcame.com/blog/2013/03/04/code-hightlight/"/>
    <updated>2013-03-04T22:47:00+08:00</updated>
    <id>http://www.orcame.com/blog/2013/03/04/code-hightlight</id>
    <content type="html"><![CDATA[<h2>Javascript</h2>

<figure class='code'><figcaption><span>这是一段javascript代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;click on &#39;</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h2>C</h2>

<figure class='code'><figcaption><span>这是一段C语言代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hello world&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>C Sharp</h2>

<figure class='code'><figcaption><span>这是一段C#代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Human</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">private</span> <span class="kt">string</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="nf">Human</span><span class="p">(</span><span class="kt">string</span> <span class="n">name</span><span class="p">){</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="n">name</span><span class="p">=</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">void</span> <span class="nf">SayHi</span><span class="p">(){</span>
</span><span class='line'>      <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;Hi, I am {0}. Nice to meet you.&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="n">name</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Golang</h2>

<figure class='code'><figcaption><span>这是一段golang代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nx">fmt</span> <span class="s">&quot;fmt&quot;</span>  <span class="c1">// Package implementing formatted I/O.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Hello, world; or Καλημέρα κόσμε; or こんにちは 世界\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python</h2>

<figure class='code'><figcaption><span>这是一段Python代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="c"># Filename: mymodule.py</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sayhi</span><span class="p">():</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&#39;Hi, this is mymodule speaking.&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s">&#39;0.1&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># End of mymodule.py</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub + Octopress 搭建个人Blog]]></title>
    <link href="http://www.orcame.com/blog/2013/03/02/hello-git-world/"/>
    <updated>2013-03-02T16:25:00+08:00</updated>
    <id>http://www.orcame.com/blog/2013/03/02/hello-git-world</id>
    <content type="html"><![CDATA[<h2>预备知识</h2>

<h3>Octopress是什么？</h3>

<p>Octopress是一个基于jekyll的博客系统，用Ruby语言编写。Octopress使用静态页面，内容不依赖于数据库，可以使用纯文本，HTML，markdown标记语言写文章。</p>

<!-- more -->


<h3>jekyll是什么?</h3>

<p>请看<a href="http://jekyllrb.com/">这里</a>和<a href="http://www.soimort.org/posts/101/">这里</a></p>

<h3>markdown是什么?</h3>

<p>直接看这个<a href="http://wowubuntu.com/markdown/">教程</a>或这个<a href="http://equation85.github.com/blog/markdown-examples/">教程+示例</a></p>

<h3>github是什么？</h3>

<p>老兄，你out了，自己Google去(友情提示，为了宇宙的安宁，远离baidu)。<br/>
哦，别忘了注册一个Github的账号，稍后有用。</p>

<h2>准备环境</h2>

<h3>安装git</h3>

<p>到<a href="http://www.github.com">github</a>上下载<a href="https://help.github.com/articles/set-up-git">安装包</a>。<br/>
配置github，执行</p>

<pre><code>ls ~/.ssh  
</code></pre>

<p>若结果为</p>

<pre><code>id_rsa  id_rsa.pub  known_hosts
</code></pre>

<p>执行</p>

<pre><code>mv ~/.ssh ~/.ssh_backup  
</code></pre>

<p>备份ssh key，执行</p>

<pre><code>ssh-keygen -t rsa -C "你的邮箱地址，例如yourname@gmail.com"
&lt;span color="green"&gt;Generating public/private rsa key pair.&lt;/span&gt;
&lt;span color="green"&gt;Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;/span&gt;  #此处直接回车   

Enter passphrase (empty for no passphrase):  #此处输入加密串，输入状态是看不到的
Enter same passphrase again:  #确认刚刚输入的加密串
</code></pre>

<p>目前为止，成功生成SSH key，在github上的账号设置中，<strong>添加新的SSH key</strong> ，随便起个名字，将<code>~/.ssh</code>目录下的文件<code>id_rsa.pub</code>中的内容黏贴到Key域中。</p>

<p>执行</p>

<pre><code>ssh -T git@github.com
</code></pre>

<p>会提示</p>

<pre><code>The authenticity of host 'github.com (207.97.227.243)' can't be established.
RSA key fingerprint is xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:4d:ae:34:ed:76.
Are you sure you want to continue connecting (yes/no)?
</code></pre>

<p>莫要惊慌，直接输入<code>yes</code></p>

<pre><code>Hi xxxxx! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>

<p>然后执行</p>

<pre><code>git config --global user.name "your_name"
git config --global user.email "your_mail_box_address"  
</code></pre>

<p>到github上面创建一个名称为yourusername.github.com的pro，过程很简单，如不会创建，请google</p>

<p>大功告成了一小步。</p>

<h3>安装Ruby</h3>

<p>执行<code>ruby -v</code>查看系统版本号，如果不低于<strong>1.9.3</strong>, 跳过此步骤 <br/>
安装步骤请看这个<a href="http://ruby-china.org/wiki/install_ruby_guide">教程</a>,需要<strong>注意</strong>的是，我们要安装的版本为<span style="color:red">1.9.3</span>，将教程中的版本号(如果低于1.9.3)替换为1.9.3<br/>
安装好Rubby后，执行<code>rvm use 1.9.3</code>更改版本号，若出现</p>

<pre><code>RVM is not a function, selecting rubies with 'rvm use ...' will not work.

You need to change your terminal emulator preferences to allow login shell.
Sometimes it is required to use `/bin/bash --login` as the command.
Please visit https://rvm.io/integration/gnome-terminal/ for a example.
</code></pre>

<p>在终端窗口中 编辑-配置文件首选项-标题和命令-勾选 以登录Shell方式运行命令 ，重启终端后重新执行 <code>rvm use 1.9.3</code>，如顺利通过，恭喜你，走出了阿母斯特朗的一小步。</p>

<h3>安装Octopress</h3>

<pre><code>git clone git://github.com/imathis/octopress.git your_blog_folder #获取octopress
cd your_blog_folder    #如果有提示（提升ruby版本号),yes到底  

gem install bundler 
bundle install  

rake install
</code></pre>

<h3>配置Octopress</h3>

<p>在your_blog_folder下面有一个<code>_config.yml</code>文件，编辑该文件的内容</p>

<pre><code>url: yourusername.github.com
title: your blog title
subtitle: your blog sub title
author: your name
simple_search: http://google.com/search
description: your blog descritpion.
......
</code></pre>

<p>内容很简单，以您的智慧，想不懂都难，需要注意的是每一项key和value之间的 冒号(:)后面是有一个 <strong>空格</strong> 的，否则会报错。</p>

<h2>发表博客</h2>

<h3>写文章</h3>

<p>执行</p>

<pre><code>rake new_post["hello github"] 
</code></pre>

<p>会在”your_blog_folder/source/_post”下生成一个xx.makedown文件，用您在<a href="http://wowubuntu.com/markdown/">这里</a>或<a href="http://equation85.github.com/blog/markdown-examples/">这里</a>学到的markdown语法来编辑文章就行了。</p>

<p>执行</p>

<pre><code>rake generate
rake preview
</code></pre>

<p>打开 localhost:4000 预览博客</p>

<h3>发表文章</h3>

<p>预览文章没有问题了，执行</p>

<pre><code>rake deploy
</code></pre>

<p>发布博客，等待一段时间，大概10分钟。打开http://yourusername.github.com 就可以访问刚刚生成的博客了。</p>

<h3>绑定域名</h3>

<p>如果需要绑定域名，可以在your_blog_folder目录下面建立一个名称为<code>CNAME</code>的文本文件，注意无后缀名，内容为</p>

<pre><code>www.yourdomain.com
</code></pre>

<p>然后在你的域名提供商处将DNS改为<code>204.232.175.78</code>(pages.github.com的IP地址，可以ping一下，以获取的内容为准)<br/>
等待一段时间后域名生效，就可以通过www.yourdomain.com访问博客了。（留意您的邮箱，有错误github会提示您的）</p>
]]></content>
  </entry>
  
</feed>
